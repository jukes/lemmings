define(['my/assetsHolder', 'easeljs'], function(assetsHolder, createjs) {

    //var sprites = {};    
    //var lemming = {};


    //Load lemmings sprites
    //Walking sequence
    var spriteSheetWalking;

    //Falling sequence
    var spriteSheetFalling;

    function __init() {
        spriteSheetWalking = new createjs.SpriteSheet({
            //Image to use
            images: [assetsHolder.sheet('monsterARun')],
            //Width, height and registration point of each sprite
            frames: {width: 64, height: 64, regX: 32, regY: 32},
            // To slow down the animation loop of the sprite, we set the frequency to 4 to slow down by a 4x factor
            animations: {
                walk: [0, 9, 'walk', 6]
            }
        });

        //Walking to the right sequence
        createjs.SpriteSheetUtils.addFlippedFrames(spriteSheetWalking, true, false, false);

        spriteSheetFalling = new createjs.SpriteSheet({
            images: [assetsHolder.sheet('monsterAIdle')],
            frames: {width: 64, height: 64, regX: 32, regY: 32},
            animations: {
                idle: [0, 10, "idle", 4]
            }
        });

    }

    return {
        //Declare lemming statuses
        SPAWN: 0,
        WALKING: 1,
        FALLING: 2,
        SOFT_FALLING: 3,
        DIGGING: 4,
        BUILDING: 5,
        STOPPING: 6,
        
        /**
         * Initializes sprites to be used by subsequent create calls
         * @returns {undefined}
         */
        init: function() {
            __init();
        },
                
        /**
         * 
         * @param {createjs.Stage} aStage
         * @param {Number} scr_width
         * @param {Number} scr_height
         * @returns {status: Number, screen_width: Number, screen_height: Number, walkAnimation: createjs.BitmapAnimation, fallAnimation: createjs.BitmapAnimation}
         */        
        create: function(aStage, scr_width, scr_height) {

            var lemming = {
                status: this.SPAWN,
                screen_width: scr_width,
                screen_height: scr_height,
                stage: aStage
            };

            //Create a BitmapAnimation instance to display and play back the sprite sheet:
            lemming.walkAnimation = new createjs.BitmapAnimation(spriteSheetWalking);

            // set the registration point (the point it will be positioned and rotated around)
            // to the center of the frame dimensions:
            lemming.walkAnimation.regX = lemming.walkAnimation.spriteSheet.frameWidth / 2 | 0;
            lemming.walkAnimation.regY = lemming.walkAnimation.spriteSheet.frameHeight / 2 | 0;

            // walk_h has been generated by addFlippedFrames and
            // contained the right facing animations
            lemming.walkAnimation.gotoAndPlay("walk_h"); 	//walking from left to right

            // set up a shadow. Note that shadows are ridiculously expensive. You could display hundreds
            // of animated rats if you disabled the shadow.
            lemming.walkAnimation.shadow = new createjs.Shadow("#454", 0, 5, 4);

            lemming.walkAnimation.name = 'monster1';
            lemming.walkAnimation.direction = 90;
            lemming.walkAnimation.vX = 1;
            lemming.walkAnimation.vY = 0;
            lemming.walkAnimation.x = 16;
            lemming.walkAnimation.y = 32;

            //Falling animation
            lemming.fallAnimation = new createjs.BitmapAnimation(spriteSheetFalling);
            lemming.fallAnimation.name = "monsteridle1";
            lemming.fallAnimation.x = 16;
            lemming.fallAnimation.y = 32;

            lemming.getStatus = function() {
                return this.status;
            };

            lemming.setStatus = function(aStatus) {
                this.status = aStatus;
            };

            /**
             * 
             * @returns {undefined}
             */
            lemming.tick = function() {

                //console.log('Calling tick from deep inside object');

                // Hit testing the screen width, otherwise our sprite would disappear
                if (this.walkAnimation.x >= this.screen_width - 16) {
                    // We've reached the right side of our screen
                    // We need to walk left now to go back to our initial position
                    this.walkAnimation.direction = -90;
                    this.walkAnimation.gotoAndPlay("walk");
                }

                if (this.walkAnimation.x < 16) {
                    // We've reached the left side of our screen
                    // We need to walk right now
                    this.walkAnimation.direction = 90;
                    this.walkAnimation.gotoAndPlay("walk_h");
                    this.stage.removeChild(this.walkAnimation);
                    this.fallAnimation.gotoAndPlay("idle");
                    this.stage.addChild(this.fallAnimation);

                }

                // Moving the sprite based on the direction & the speed
                if (this.walkAnimation.direction === 90) {
                    this.walkAnimation.x += this.walkAnimation.vX;
                    this.walkAnimation.y += this.walkAnimation.vY;
                }
                else {
                    this.walkAnimation.x -= this.walkAnimation.vX;
                    this.walkAnimation.y -= this.walkAnimation.vY;
                }
            };

            return lemming;
        }
    };

});